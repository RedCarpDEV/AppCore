<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ControlTemplate x:Key="ToggleButton.Template.Default" TargetType="ToggleButton">
        <Grid
            Margin="0"
            Background="{TemplateBinding Background}"
            SnapsToDevicePixels="True"
            UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition x:Name="Distance" Width="4" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Border
                Grid.Column="0"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="15" />
                        <ColumnDefinition Width="15" />
                    </Grid.ColumnDefinitions>
                    <Border
                        x:Name="Off"
                        Grid.Column="0"
                        Background="{DynamicResource Brush.Background.Layer1}"
                        RenderTransformOrigin="1,0.5">
                        <Border.RenderTransform>
                            <ScaleTransform ScaleX="1" />
                        </Border.RenderTransform>
                    </Border>
                    <Border
                        x:Name="On"
                        Grid.Column="1"
                        Background="{DynamicResource Accent.Default}"
                        RenderTransformOrigin="0,0.5">
                        <Border.RenderTransform>
                            <ScaleTransform ScaleX="0" />
                        </Border.RenderTransform>
                    </Border>
                </Grid>
            </Border>

            <Border Grid.Column="2" BorderThickness="{TemplateBinding BorderThickness}">
                <ContentPresenter
                    x:Name="ContentPresenter"
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Focusable="False"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>

            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Off" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="On" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="On" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Off" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Background.Layer2}" />
                <Setter TargetName="Off" Property="Background" Value="{DynamicResource Brush.Background.Layer2}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Accent.Default}" />
                <Setter TargetName="Off" Property="Background" Value="{DynamicResource Brush.Background.Layer2}" />
            </Trigger>
            <Trigger Property="Content" Value="{x:Null}">
                <Setter TargetName="ContentPresenter" Property="Visibility" Value="Hidden" />
                <Setter TargetName="Distance" Property="Width" Value="0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.8" />
                <Setter Property="FontStyle" Value="Italic" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Background" Value="{DynamicResource Brush.Background.Default}" />
                <Setter Property="Foreground" Value="{DynamicResource Brush.Foreground.Layer1}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ToggleButton.Template.ComboBox" TargetType="ToggleButton">
        <Border
            x:Name="TemplateRoot"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
            <Border
                x:Name="SplitBorder"
                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                Margin="0"
                HorizontalAlignment="Right"
                SnapsToDevicePixels="True">
                <Path
                    x:Name="arrow"
                    Margin="0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
                    Fill="{TemplateBinding Foreground}" />
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Foreground.Layer1}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style x:Key="ToggleButton.Style.Default" TargetType="ToggleButton">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Margin" Value="{DynamicResource Thickness.Margin.Default}" />
        <Setter Property="Padding" Value="{DynamicResource Thickness.Padding.Default}" />
        <Setter Property="BorderThickness" Value="{DynamicResource Thickness.Border.Default}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Background.Layer1}" />
        <Setter Property="Background" Value="{DynamicResource Brush.Background.Default}" />
        <Setter Property="Foreground" Value="{DynamicResource Brush.Foreground.Default}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
        <Setter Property="Template" Value="{StaticResource ToggleButton.Template.Default}" />
    </Style>

    <Style BasedOn="{StaticResource ToggleButton.Style.Default}" TargetType="ToggleButton" />


    <!--  Special ToggleButton Styles  -->

    <Style x:Key="ToggleButton.Style.ComboBox" TargetType="ToggleButton">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template" Value="{StaticResource ToggleButton.Template.ComboBox}" />
    </Style>

</ResourceDictionary>